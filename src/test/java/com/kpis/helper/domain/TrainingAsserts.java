package com.kpis.helper.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TrainingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrainingAllPropertiesEquals(Training expected, Training actual) {
        assertTrainingAutoGeneratedPropertiesEquals(expected, actual);
        assertTrainingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrainingAllUpdatablePropertiesEquals(Training expected, Training actual) {
        assertTrainingUpdatableFieldsEquals(expected, actual);
        assertTrainingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrainingAutoGeneratedPropertiesEquals(Training expected, Training actual) {
        assertThat(expected)
            .as("Verify Training auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrainingUpdatableFieldsEquals(Training expected, Training actual) {
        assertThat(expected)
            .as("Verify Training relevant properties")
            .satisfies(e -> assertThat(e.getRecorded_date()).as("check recorded_date").isEqualTo(actual.getRecorded_date()))
            .satisfies(e -> assertThat(e.getTotal_courses()).as("check total_courses").isEqualTo(actual.getTotal_courses()))
            .satisfies(e -> assertThat(e.getTotal_participants()).as("check total_participants").isEqualTo(actual.getTotal_participants()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTrainingUpdatableRelationshipsEquals(Training expected, Training actual) {}
}
