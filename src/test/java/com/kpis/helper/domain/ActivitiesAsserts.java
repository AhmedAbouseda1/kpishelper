package com.kpis.helper.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ActivitiesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivitiesAllPropertiesEquals(Activities expected, Activities actual) {
        assertActivitiesAutoGeneratedPropertiesEquals(expected, actual);
        assertActivitiesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivitiesAllUpdatablePropertiesEquals(Activities expected, Activities actual) {
        assertActivitiesUpdatableFieldsEquals(expected, actual);
        assertActivitiesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivitiesAutoGeneratedPropertiesEquals(Activities expected, Activities actual) {
        assertThat(expected)
            .as("Verify Activities auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivitiesUpdatableFieldsEquals(Activities expected, Activities actual) {
        assertThat(expected)
            .as("Verify Activities relevant properties")
            .satisfies(e -> assertThat(e.getRecorded_date()).as("check recorded_date").isEqualTo(actual.getRecorded_date()))
            .satisfies(e -> assertThat(e.getTotal_activities()).as("check total_activities").isEqualTo(actual.getTotal_activities()))
            .satisfies(e -> assertThat(e.getTotal_participants()).as("check total_participants").isEqualTo(actual.getTotal_participants()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivitiesUpdatableRelationshipsEquals(Activities expected, Activities actual) {}
}
