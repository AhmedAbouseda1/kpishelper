package com.kpis.helper.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpaceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceAllPropertiesEquals(Space expected, Space actual) {
        assertSpaceAutoGeneratedPropertiesEquals(expected, actual);
        assertSpaceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceAllUpdatablePropertiesEquals(Space expected, Space actual) {
        assertSpaceUpdatableFieldsEquals(expected, actual);
        assertSpaceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceAutoGeneratedPropertiesEquals(Space expected, Space actual) {
        assertThat(expected)
            .as("Verify Space auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceUpdatableFieldsEquals(Space expected, Space actual) {
        assertThat(expected)
            .as("Verify Space relevant properties")
            .satisfies(e -> assertThat(e.getRecorded_date()).as("check recorded_date").isEqualTo(actual.getRecorded_date()))
            .satisfies(
                e ->
                    assertThat(e.getSquare_meters_available())
                        .as("check square_meters_available")
                        .isEqualTo(actual.getSquare_meters_available())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceUpdatableRelationshipsEquals(Space expected, Space actual) {}
}
